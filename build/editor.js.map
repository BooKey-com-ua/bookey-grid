{"version":3,"file":"editor.js","mappings":";;;;;;;;;;;;;;;;;;AAAwD;AAAA;AAExD,MAAMG,UAAU,GAAG;EAClBC,EAAE,EAAE,kCAAkC;EACtCC,EAAE,EAAE,sCAAsC;EAC1CC,EAAE,EAAE;AACL,CAAC;AAEc,SAASC,IAAIA,CAAC;EAACC;AAAU,CAAC,EAAE;EAC1C,MAAMC,UAAU,GAAGT,sEAAa,CAAC;IAChCU,KAAK,EAAE;MACN,QAAQ,EAAG,gBAAgB;MAC3B,SAAS,EAAG,MAAM;MAClB,iBAAiB,EAAG;IACrB;EACD,CAAC,CAAC;EAEF,oBACCR,sDAAA;IAAKS,EAAE,EAAC,aAAa;IAAA,GAAKF,UAAU;IAAAG,QAAA,EAClCT,UAAU,CAACK,UAAU,CAACK,QAAQ;EAAC,CAC5B,CAAC;AAER;;;;;;;;;;;ACtBA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNsD;AAC5B;AACA;AACU;AAEpCC,oEAAiB,CAACE,6CAAa,EAAE;EAChCD,IAAI;EACJG,IAAI,EAAEA,CAAA,KAAM;AACb,CAAC,CAAC,C","sources":["webpack://scripts/./src/edit.js","webpack://scripts/./src/lib/editor.css?2ae2","webpack://scripts/external window \"ReactJSXRuntime\"","webpack://scripts/external window [\"wp\",\"blockEditor\"]","webpack://scripts/external window [\"wp\",\"blocks\"]","webpack://scripts/webpack/bootstrap","webpack://scripts/webpack/runtime/compat get default export","webpack://scripts/webpack/runtime/define property getters","webpack://scripts/webpack/runtime/hasOwnProperty shorthand","webpack://scripts/webpack/runtime/make namespace object","webpack://scripts/./src/editor.js"],"sourcesContent":["import { useBlockProps } from '@wordpress/block-editor';\n\nconst dictionary = {\n\ten: 'Hourly booking BooKey grid block',\n\tru: 'Блок таблицы почасовой аренды BooKey',\n\tuk: 'Блок таблицi погодинноi аренди BooKey',\n}\n\nexport default function Edit({attributes}) {\n\tconst blockProps = useBlockProps({\n\t\tstyle: {\n\t\t\t'border' : '1px solid #ccc',\n\t\t\t'display' : 'flex',\n\t\t\t'justify-content' : 'center',\n\t\t}\n\t});\n\n\treturn (\n\t\t<div id=\"bookey-root\" {...blockProps}>\n\t\t\t{dictionary[attributes.language]}\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './lib/editor.css';\nimport edit from './edit';\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n\tedit,\n\tsave: () => null,\n});"],"names":["useBlockProps","jsx","_jsx","dictionary","en","ru","uk","Edit","attributes","blockProps","style","id","children","language","registerBlockType","edit","metadata","name","save"],"sourceRoot":""}